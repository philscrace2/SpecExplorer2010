<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_CannotGetUIShellService" xml:space="preserve">
    <value>Cannot get IVsUIShell service.</value>
  </data>
  <data name="Error_CannotCreateWindow" xml:space="preserve">
    <value>Cannot create the window.</value>
  </data>
  <data name="Error_ConversionFailed_InvalidType" xml:space="preserve">
    <value>The object does not implement {0} and is not a {1} {2}. Conversion is not possible.</value>
  </data>
  <data name="Error_PropValueNotUIObject" xml:space="preserve">
    <value>The value of a property must be an IVsUIObject.</value>
  </data>
  <data name="Caption_WPFDispatcherUnhandledException" xml:space="preserve">
    <value>WPF Dispatcher Unhandled Exception</value>
  </data>
  <data name="Error_CollectionElementIsNotDataSource" xml:space="preserve">
    <value>The value does not implement IDataSource interface.</value>
  </data>
  <data name="Error_CannotObtainColor" xml:space="preserve">
    <value>Cannot obtain color information for conversion.</value>
  </data>
  <data name="Error_GetFrameworkElementBeforeCreate" xml:space="preserve">
    <value>GetFrameworkElement should only be called after CreateFrameworkElement.</value>
  </data>
  <data name="Error_CannotGetImageFromList" xml:space="preserve">
    <value>Cannot retrieve the indexed image {0} from the image list.</value>
  </data>
  <data name="Error_CannotCreateUIElement" xml:space="preserve">
    <value>The factory cannot create an UI element for the specified element identifier {0}:{1}.</value>
  </data>
  <data name="Error_CannotCreateUIElementType" xml:space="preserve">
    <value>The WPF loader cannot create an UI element for type {0}.</value>
  </data>
  <data name="Error_CannotSetDataSource" xml:space="preserve">
    <value>Cannot set the data source for the UI element.</value>
  </data>
  <data name="Error_UnrecognizedWindowHandle" xml:space="preserve">
    <value>Unrecognized window handle.</value>
  </data>
  <data name="Error_CannotCheckEqual" xml:space="preserve">
    <value>Cannot test if the new property value is the same as the old property value; property change notification cannot be raised.</value>
  </data>
  <data name="Error_IncorrectPropValueType" xml:space="preserve">
    <value>The value is not of the expected type of this property.</value>
  </data>
  <data name="Error_CannotSetPropertyNullValue_Format" xml:space="preserve">
    <value>The property '{0}' cannot have null values because it has a custom type '{1}'. A data converter must be used to set the value of this property.</value>
  </data>
  <data name="Error_CookieTable_Unlocked" xml:space="preserve">
    <value>The cookie table is not locked.</value>
  </data>
  <data name="Error_CannotGetParent" xml:space="preserve">
    <value>Cannot get parent window handle from shell.</value>
  </data>
  <data name="Error_DuplicateProperty" xml:space="preserve">
    <value>The data source already contains a property '{0}'.</value>
  </data>
  <data name="Error_ConversionFailed" xml:space="preserve">
    <value>Conversion of the value type to WPF format failed.</value>
  </data>
  <data name="Error_CannotCreateChildWindow" xml:space="preserve">
    <value>Cannot create the child window.</value>
  </data>
  <data name="Error_CannotSetProperty" xml:space="preserve">
    <value>The UI object returned an error code for SetValue</value>
  </data>
  <data name="Error_InvalidObjectHandle" xml:space="preserve">
    <value>The object contains NULL handle for {0}, the conversion is not possible.</value>
  </data>
  <data name="Error_CannotInsertCollectionIntoItself" xml:space="preserve">
    <value>Cannot insert a collection into itself.</value>
  </data>
  <data name="Error_CannotCreateWPFLoader" xml:space="preserve">
    <value>Cannot create the WPF Loader.</value>
  </data>
  <data name="Error_UnknownUIObjectType" xml:space="preserve">
    <value>The UI object type {0} is not recognized, the visual element cannot be created.</value>
  </data>
  <data name="Error_CookieTable_InvalidRange" xml:space="preserve">
    <value>Invalid range for cookie values.</value>
  </data>
  <data name="Error_UnhandledException_Format" xml:space="preserve">
    <value>An unhandled exception of type {0} was detected.\r\rException Message:\r\r{1}</value>
  </data>
  <data name="Error_UnrecognizedBuiltInValueType" xml:space="preserve">
    <value>Unrecognized object value for built in VsUI types.</value>
  </data>
  <data name="Error_CannotGetPropertyValueFormat" xml:space="preserve">
    <value>Cannot get the property value's format.</value>
  </data>
  <data name="Error_CannotGetPropertyValueType" xml:space="preserve">
    <value>Cannot get the property value's type.</value>
  </data>
  <data name="Error_ReadOnlyCollection" xml:space="preserve">
    <value>The collection is read-only.</value>
  </data>
  <data name="Error_VerbNotDefined" xml:space="preserve">
    <value>The data source does not contain a verb '{0}'.</value>
  </data>
  <data name="Error_PropertyValueNeedsToBeVsUIObject" xml:space="preserve">
    <value>Properties that don't have built-in types need to be set using IVsUIObject values.</value>
  </data>
  <data name="Error_InvalidCookieValue" xml:space="preserve">
    <value>The cookie value is not valid.</value>
  </data>
  <data name="Error_CannotGetProperty" xml:space="preserve">
    <value>The UI object returned an error code for GetValue</value>
  </data>
  <data name="Error_ProviderCannotBeObtainedFromSite" xml:space="preserve">
    <value>The service provider site must provide the Microsoft.VisualStudio.OLE.Interop.IServiceProvider service.</value>
  </data>
  <data name="Error_CookieTable_InvalidRange2" xml:space="preserve">
    <value>Invalid cookie value should be either smaller than minimum valid value or greater than maximum valid value.</value>
  </data>
  <data name="Error_PropertyValueTypeMismatch" xml:space="preserve">
    <value>The value doesn't match the property type.</value>
  </data>
  <data name="Error_CannotEnterModal" xml:space="preserve">
    <value>Cannot enter modal state for the shell main window.</value>
  </data>
  <data name="Error_CannotGetPropertyData" xml:space="preserve">
    <value>Cannot get the property value's data.</value>
  </data>
  <data name="Error_CannotChangeDataSourceCollection" xml:space="preserve">
    <value>Properties whose values are of type IVsUICollection cannot currently be set through the presentation layer with a wrapped collection object.</value>
  </data>
  <data name="Error_SiteIsNotProvider" xml:space="preserve">
    <value>The element site must be a service provider that implements either System.IServiceProvider or Microsoft.VisualStudio.OLE.Interop.IServiceProvider.</value>
  </data>
  <data name="Error_KeyCannotBeNull" xml:space="preserve">
    <value>The key for an element in the cache cannot be null</value>
  </data>
  <data name="Error_CannotGetImageInfo" xml:space="preserve">
    <value>Cannot get information for image {0} in the image list.</value>
  </data>
  <data name="Error_NoConverterManager" xml:space="preserve">
    <value>Cannot obtain the IVsUIDataConverterManager service.</value>
  </data>
  <data name="Error_CookieTable_NoMoreCookies" xml:space="preserve">
    <value>No more cookies available.</value>
  </data>
  <data name="Log_Registering" xml:space="preserve">
    <value>Registering {0}:\t\t{1} ({2})\n</value>
  </data>
  <data name="Error_NoServiceProvider" xml:space="preserve">
    <value>The property requires using a data converter. The DataSource parameters needs to specify the service provider.</value>
  </data>
  <data name="Error_NoValidHelpTopic" xml:space="preserve">
    <value>Cannot invoke the Help command. The help topic was not specified and cannot be obtained from properties.</value>
  </data>
  <data name="Error_DoubleCreateElementCall" xml:space="preserve">
    <value>CreateFrameworkElement should be called only once.</value>
  </data>
  <data name="Error_EmptyString" xml:space="preserve">
    <value>{0} can not be an empty string.</value>
  </data>
  <data name="Error_DuplicateVerb" xml:space="preserve">
    <value>The data source already contains a verb '{0}'.</value>
  </data>
  <data name="Error_CannotGetDataSource" xml:space="preserve">
    <value>The factory cannot get a data source for the specified data source identifier {0}:{1}.</value>
  </data>
  <data name="Error_CannotInvokeVerbOnDataSource" xml:space="preserve">
    <value>The verb cannot be invoked on this data source.</value>
  </data>
  <data name="Error_CannotGetUIObject" xml:space="preserve">
    <value>Cannot get the UI object from the IVsUIElement, the visual element cannot be created.</value>
  </data>
  <data name="Error_GelTypeCannotBeEmpty" xml:space="preserve">
    <value>The Gel type string cannot be empty.</value>
  </data>
  <data name="Error_PropertyNotDefined" xml:space="preserve">
    <value>The data source does not contain a property '{0}'.</value>
  </data>
  <data name="Warning_DataSourceNotClosed" xml:space="preserve">
    <value>The data source was not disposed before the application was terminated. Consider calling IVsUISimpleDataSource.Close() when the data source is no longer needed (e.g. when the tool window using the data is closed).</value>
  </data>
  <data name="Error_CannotDestroyWindow" xml:space="preserve">
    <value>Cannot destroy the window.</value>
  </data>
  <data name="Log_Unregistering" xml:space="preserve">
    <value>Unregistering {0}:\t\t{1}\n</value>
  </data>
  <data name="Error_InvalidUIObjectType" xml:space="preserve">
    <value>The UI object is not {0}.</value>
  </data>
  <data name="Error_AddBuiltInPropertyUsedForUIObject" xml:space="preserve">
    <value>AddBuiltInProperty should not be used for values which already implement IVsUIObject. Call AddProperty instead.</value>
  </data>
  <data name="Error_NoConverterAvailable" xml:space="preserve">
    <value>No converter exist for this value type and format to WPF.</value>
  </data>
  <data name="Error_CapacityMustBeGreaterThanZero" xml:space="preserve">
    <value>The capacity for a ShapeIdentifierMap must be 1 or more</value>
  </data>
</root>