<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Package_InvalidServiceInstance" xml:space="preserve">
    <value>The service instance must derive from or implement {0}.</value>
  </data>
  <data name="Attributes_UnknownPosition" xml:space="preserve">
    <value>Unknown relative position: {0}.</value>
  </data>
  <data name="Package_PageNotDialogPage" xml:space="preserve">
    <value>The page class {0} must derive from DialogPage.</value>
  </data>
  <data name="Package_PageCtorMissing" xml:space="preserve">
    <value>The page type {0} does not offer an empty constructor.</value>
  </data>
  <data name="General_MissingService" xml:space="preserve">
    <value>The service '{0}' must be installed for this feature to work.  Ensure that this service is available.</value>
  </data>
  <data name="Attributes_InvalidFactoryType" xml:space="preserve">
    <value>The factoryType must be of one of those type: Type, Guid, string (representing a Guid).</value>
  </data>
  <data name="General_ExpectedNonEmptyString" xml:space="preserve">
    <value>Expected string that is not empty.</value>
  </data>
  <data name="General_UnsupportedValue" xml:space="preserve">
    <value>Unsupported value: {0}.</value>
  </data>
  <data name="Reg_NotifyMenuResource" xml:space="preserve">
    <value>Menu:             {0}, {1}</value>
  </data>
  <data name="Reg_NotifyToolboxItemFilter" xml:space="preserve">
    <value>                   Filter: {0}</value>
  </data>
  <data name="Reg_NotifyLanguageOptionPage" xml:space="preserve">
    <value>Language Option Page: {0}, {1}</value>
  </data>
  <data name="Reg_NotifyLanguageCodeExpansion" xml:space="preserve">
    <value>Language Code Expansion: {0}</value>
  </data>
  <data name="Reg_NotifyProjectFactory" xml:space="preserve">
    <value>Project Factory:  {0}</value>
  </data>
  <data name="Reg_NotifyInstalledProduct" xml:space="preserve">
    <value>Installed Product:   {0}, Version {1}</value>
  </data>
  <data name="Reg_ErrorIncompatibleParametersTypes" xml:space="preserve">
    <value>Parameters {0} and {1} have incompatible types</value>
  </data>
  <data name="General_ObjectDisposed" xml:space="preserve">
    <value>Method called on a disposed object of type {0}.</value>
  </data>
  <data name="Reg_NotifyToolVisibility" xml:space="preserve">
    <value>Tool Visibility:  {0}, {1}</value>
  </data>
  <data name="ToolWindow_TooLateToAddToolbar" xml:space="preserve">
    <value>Toolbar cannot be added after the Frame is created.
Add the ToolBar in the ToolWindow constructor.</value>
  </data>
  <data name="General_ArraySizeShouldBeAtLeast1" xml:space="preserve">
    <value>Expecting an array of size greater than zero.</value>
  </data>
  <data name="Reg_NotifyEditorView" xml:space="preserve">
    <value>Logical View:     {0}</value>
  </data>
  <data name="Reg_NotifyCreateObject" xml:space="preserve">
    <value>Creatable Object: {0}</value>
  </data>
  <data name="Reg_NotifyEditorExtension" xml:space="preserve">
    <value>Editor Extension: {0}, {1}</value>
  </data>
  <data name="Package_MissingService" xml:space="preserve">
    <value>The package requires that service '{0}' be installed.  Ensure that this service is available.</value>
  </data>
  <data name="General_InvalidType" xml:space="preserve">
    <value>Expected object of type {0}.</value>
  </data>
  <data name="Attributes_ProductNameNotSpecified" xml:space="preserve">
    <value>No Product Name was specified.  To register as an Installed Product, a Product Name is required.</value>
  </data>
  <data name="Toolbox_ItemNotFound" xml:space="preserve">
    <value>Toolbox item "{0}" not found on machine.</value>
  </data>
  <data name="Services_InvokedOnWrongThread" xml:space="preserve">
    <value>Invoked on the wrong thread.</value>
  </data>
  <data name="Toolbox_InvalidItemId" xml:space="preserve">
    <value>Invalid toolbox item ID: {0}.</value>
  </data>
  <data name="Attributes_NoPrjForEditorFactoryNotify" xml:space="preserve">
    <value>No project guid provided, but it is needed to register the extension for EditorFactoryNotify.</value>
  </data>
  <data name="Reg_ErrorIncompatibleParametersValues" xml:space="preserve">
    <value>Parameters {0} and {1} have incompatible values</value>
  </data>
  <data name="Package_InvalidInstanceID" xml:space="preserve">
    <value>Instance ID {0} is invalid.</value>
  </data>
  <data name="Reg_NotifyInstalledProductInterface" xml:space="preserve">
    <value>Installed Product:   Using IVsInstalledProduct interface</value>
  </data>
  <data name="Reg_NotifyAutoLoad" xml:space="preserve">
    <value>Autoload package:         {0}</value>
  </data>
  <data name="Package_SiteAlreadySet" xml:space="preserve">
    <value>A site has already been set on package {0}.</value>
  </data>
  <data name="Reg_NotifyStaticToolboxGroup" xml:space="preserve">
    <value>Statically Registered Toolbox Group: ID "{0}", Name "{1}"</value>
  </data>
  <data name="Reg_NotifyKeyBinding" xml:space="preserve">
    <value>Key Binding: {0}, {1}</value>
  </data>
  <data name="Argument_EmptyString" xml:space="preserve">
    <value>Empty string is not a valid value for the argument '{0}'.</value>
  </data>
  <data name="Reg_NotifyProjectItems" xml:space="preserve">
    <value>Project Items:    {0}</value>
  </data>
  <data name="Reg_NotifyStaticToolboxItem" xml:space="preserve">
    <value>Statically Registered Toolbox Item: Group ID "{0}", Item ID "{1}", Item Name "{2}"</value>
  </data>
  <data name="Reg_NotifyToolResource" xml:space="preserve">
    <value>ToolWindow:       {0}, {1}</value>
  </data>
  <data name="Reg_NotifyEditorFactory" xml:space="preserve">
    <value>Editor Factory:   {0}</value>
  </data>
  <data name="Package_OptionNameUsed" xml:space="preserve">
    <value>The solution option name {0} is already used by this package.</value>
  </data>
  <data name="ToolWindow_PackageOnlySetByCreator" xml:space="preserve">
    <value>The package property of the tool window should only be set by the creator of the tool window.</value>
  </data>
  <data name="Reg_NotifyService" xml:space="preserve">
    <value>Service:          {0}</value>
  </data>
  <data name="Reg_NotifyLanguageExtension" xml:space="preserve">
    <value>Language Extension: {0}, {1}</value>
  </data>
  <data name="Package_PageMissingInterface" xml:space="preserve">
    <value>The page type {0} does not implement {1}.</value>
  </data>
  <data name="Reg_NotifyLanguageService" xml:space="preserve">
    <value>Language Service: {0}, {1}</value>
  </data>
  <data name="Attributes_UnknownDockingStyle" xml:space="preserve">
    <value>Unknown docking style: {0}.</value>
  </data>
  <data name="Package_InvalidToolWindowClass" xml:space="preserve">
    <value>CreateToolWindow only creates Tool Windows derived from ToolWindowPane.</value>
  </data>
  <data name="Reg_NotifyToolboxItem" xml:space="preserve">
    <value>Toolbox Items:    Version {0} (Formats: {1})</value>
  </data>
  <data name="Reg_NotifyToolboxPage" xml:space="preserve">
    <value>Toolbox Page:     {0}</value>
  </data>
  <data name="ToolWindow_TooLateToAddTool" xml:space="preserve">
    <value>toolClsid cannot be added after the Frame is created.
Add the toolClsid in the ToolWindow constructor.</value>
  </data>
  <data name="CommonMessagePumpDefaultWaitStatusBarText" xml:space="preserve">
    <value>Completing the operation you requested...</value>
  </data>
  <data name="Flavor_FailedToGetService" xml:space="preserve">
    <value>Failed to retrieve service {0}.</value>
  </data>
  <data name="Reg_NotifyToolboxItemConfiguration" xml:space="preserve">
    <value>Toolbox Config:   {0}</value>
  </data>
  <data name="Toolbox_UnsupportedFormat" xml:space="preserve">
    <value>Unsupported toolbox format: {0}.</value>
  </data>
  <data name="Reg_NotifyLanguageOptionCategory" xml:space="preserve">
    <value>LanguageOptionCategory: {0}, {1}</value>
  </data>
  <data name="Package_DuplicateService" xml:space="preserve">
    <value>The service {0} already exists in the service container.</value>
  </data>
  <data name="CommonMessagePumpDefaultWaitText" xml:space="preserve">
    <value>The operation you requested is taking longer than expected to complete. This dialog will close when the action completes.</value>
  </data>
  <data name="Reg_NotifyExtender" xml:space="preserve">
    <value>Extender:         {0}, {1}</value>
  </data>
  <data name="Attributes_ExtensionNeedsDot" xml:space="preserve">
    <value>To register the {0} file extension, you must prefix the extension with a '.'.</value>
  </data>
  <data name="Package_BadDialogPageType" xml:space="preserve">
    <value>The dialog page type {0} does not derive from DialogPage.</value>
  </data>
  <data name="Reg_NotifyPackage" xml:space="preserve">
    <value>Package:          {0} {1}</value>
  </data>
  <data name="Reg_NotifyLoadKey" xml:space="preserve">
    <value>LoadKey:          {0} {1}
Version {2}
Edition Required: {3}</value>
  </data>
  <data name="Reg_NotifyOptionPage" xml:space="preserve">
    <value>Option Page:      {0}\{1}</value>
  </data>
  <data name="Package_BadOptionName" xml:space="preserve">
    <value>The solution option name {0} is invalid.  It cannot contain '.', '/' or other special characters.</value>
  </data>
</root>